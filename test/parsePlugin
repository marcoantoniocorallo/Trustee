(*
(* Not Empty! *)
let plugin p = {

} in p 
*)


(* // miss "in"
let plugin p = {
    let s = "s"
} in p 
*)

(*
let plugin p = {
    let s = "s" in
    let fun f (x : int) : int = x+1
in f
} in p 5
*)

(* secret not allowed! *)
(*
let plugin p = {
    let secret s = "s"  in
} in p
*)

(* nested blocks! *)
(*
let plugin p = {
    let trust t = { let fun f : int = 1 in handle:{f} }
    in t
} in p
*)

// plugin code cannot use external variables
(*
let a = 5 in 
let plugin p = {
    let s = 5 in
    let fun f (x : int) : int = x+1
    in (lambda (x : int) : int -> x + a)
} in p
*)

(*
// plugin code must be evaluated in a function
let plugin p = {
    let s = 5 in
    let fun f (x : int) : int = x+1
    in s
} in p
*)